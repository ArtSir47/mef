<?php
include '../../functions.php';
header_natec(
    'Перший UI плагін',
    '/backend_uIs_plugin/first_ui_plugin.php',  // Ccылка на перевод RU,
    '/uk/backend_uIs_plugin/first_ui_plugin.php', // Ccылка на перевод UA,
    '/en/backend_uIs_plugin/first_ui_plugin.php'  // Ccылка на перевод EN
);
?>

<div class="container container-sidebar">
    <?php sidebar_natec(); ?>
    <div class="content">
        <h1>Перший UI плагін (preview)</h1>
        <h2 id="creation">Створення плагіну на підставі шаблону</h2>
        <p>Зараз ми розробимо базовий UI плагін для публікації на платформі preview MEF.DEV. Для розробки цього плагіна необхідні лише знання щодо написання коду на Angular</p>
        <p>Дотримуйтесь інструкцій і дізнайтеся, як створити свій перший плагін, який надаватиме доступ до Ваших даних або за Вашою бізнес логікою.</p>
        <h3>Крок 1. Встановлення Node.js</h3>
        <p>Встановіть LTS-версію Node.js:</p>
        <ul>
            <li>Завантажте Node.js</li>
            <li>Відкрийте свій командний рядок. Це термінал на macOS та Linux, або командний рядок на Windows.</li>
            <li>Запустить node -v. Якщо ви отримаєте номер версії як вихідний файл, було встановлено node.js. Це повинно виглядати приблизно так: v12.18.4</li>
        </ul>
        <h3>Крок 2. Налаштування IDE</h3>
        <p>Ми рекомендуємо використовувати Atom або Visual Code Studio як IDE..
        <h3>Крок 3. Зробіть копію тестового проекту з репозиторію</h3>
        <p>// посилання на репозиторій  <a href="https://github.com/mef-dev/tutorial-ui-plugin">https://github.com/mef-dev/tutorial-ui-plugin</a></p>
        <h3>Крок 4. Налаштування локального тестового середовища</h3>
        <p>Спочатку ми створимо локальне тестове середовище. Це дозволить нам перевірити наш інтерфейс у браузері.</p>
        <ul>
            <li>Відкрийте IDE</li>
            <li>Перейдіть до Файл => Відкрити</li>
            <li>Відкрийте папку tutorial-ui-plugin</li>
            <li>Перейдіть до каталогу tutorial-ui-plugin cd / your-dir / tutorial-ui-plugin</li>
            <li>Запустить npm install, щоб встановити всі необхідні пакети. Це може зайняти деякий час</li>
            <li>Запустіть ng serve чи npm start для запуску локального тестового сервера, по замовчуванню ви зможете побачити проект в браузері localhost:4200 (якщо виникнуть проблеми з викликом ng з терміналу по причині політики безпеки то може допомогти виклик команди Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted)</li>
        </ul>

        <h2 id="overview">Огляд проекту</h2>
        <p>Структура проекту доволі гнучка, основні файли проекту знаходяться в директорії plugin. Для запуску проекту локально використовується main.ts, для білда плагіну перед публікацією main-plugin.ts. Конфігурація angular.json достатня для усіх дій по підготовці і публікації плагіну.</p>
        <img src="http://mef.dev/images/image13.png">
        <h3>Крок 1. Створення назви плагіну</h3>
        <p>Для початку внесемо зміни в файл package.json</p>
        <img src="http://mef.dev/images/image23.png">
        <p>Вказуємо унікальну назву для вашого фронтового плагіну - під час реєстрації вона використовується для ідентифікації пакету. Номер версії змінюємо по мірі необхідності, кожне нове завантаження на платформу - нова версія.</p>
        <h3>Крок 2. Створення сторінки плагіну</h3>
        <p>Відкрийте браузер файлів IDE та перейдіть до теки компонент plugin/components.</p>
        <p>Створення нової компоненти може бути здійснено вручну hello-world.component.ts або з терміналу ng g c hello-world. Цей файл використовується для реалізації усієї необхідної логіки.</p>
        <img src="http://mef.dev/images/image12.png">
        <p>В декораторі @Component для коректної роботи на платформі використовується template і styles для відображення вашого інтерфейсу користувача і стилізації інтерфейсу користувача відповідно. Додайте вашу новостворену компоненту в перелік declarations NgModule , якщо ви створювали її як файл в директорії вашого плагіну, якщо ж було використано команду, то вона автоматично буде додана в відповідний розділ декоратору модуля</p>
        <img src="http://mef.dev/images/image26.png">
        <h3>Крок 3. Навігація</h3>
        <p>Далі ми застосуємо певну логіку для переходу до нашого плагіну. Ми створимо для цього новий маршрут.</p>
        <ul>
            <li>Відкрийте src plugin/plugin-routing.module.ts.</li>
            <li>Додайте новий об’єкт до масиву children, що належить об’єкту маршрутів плагіна</li>
            <li>Додайте властивість path та встановіть його значення</li>
            <li>Додайте властивість компонента та встановіть для його значення тип HelloWorldComponent</li>
            <li>Імпортуйте компоненту<br>
                <img src="http://mef.dev/images/image36.png">
            </li>
            <li>Дотримуйтесь представленої структури, аби на платформі було коректно інтерпретовано маршрути саме вашого плагіну.</li>
            <li>Запускаємо проект - отримуємо ось такий результат<br>
                <img src="http://mef.dev/images/image33.png">
            </li>
        </ul>
        <h3>Крок 4. Збірання плагіну</h3>
        <p>Тепер можемо зібрати наш найпростіший плагін і завантажити на платформу. В терміналі викликаємо команду npm run build - результатом виконання цього скрипта буде файл  app-hello-world-1.0.0.bundle.js - де app-hello-world - name в package.json, 1.0.0 - version в package.json.</p>
        <p>Він знаходиться в директорії external_plugins/app-hello-world-1.0.0 в корені проекту.</p>
        <h2 id="publication">Публікація UI плагіну на платформу</h2>
        <p>Для цього повинно бути зареєстрованим користувачем платформи із ролью Developer - якщо Ви не зареєстровані то під час логіну до платформи за адресою <a href="http://preview.mef.dev">https://preview.mef.dev</a> Вам буде надано можливості здійснити реєстрацію.</p>
        <p>Після заходу на платформу:</p>
        <ul>
            <li>Перейдіть до переліку ваших плагінів, натисніть редагувати - коліщатко на картці з загальною інформацію про плагін</li>
            <li>Оберіть для вашого плагіну тип UI<br>
                <img src="http://mef.dev/images/image2.png">
                <br>У вас з’явиться блок для опису вашого плагіну для фронта.</li>
            <li>Заповніть інформацію про ваш фронтовий плагін<br>
                <img src="http://mef.dev/images/image22.png">
                <br><b>plugin-uiname</b> - name - з package.json<br><b>modulename</b> назва модуля з plugin.module.ts в діректорії</li>
            <li>додайте роут який ви визначили як доступний під час розробки</li>
            <li>завантажте на платформу app-hello-world-1.0.0.bundle.js</li>
            <li>Після успішного завантаження оберіть зі списку і натисніть “Зберегти”. Сервіс з’явиться для вас для попереднього перегляду.</li>
        </ul>
    </div>
</div>

<?php

footer_natec();
?>